services:
  api:
    build: 
      context: .
      args:
        SKIP_TESTS: "true"  # Skip tests in production build
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data:ro  # Read-only pattern data
      - ./exports:/app/exports
      - ./cache:/app/cache
      - ./.env:/app/.env:ro  # Environment variables
    environment:
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379/0
    command: uvicorn app.api:app --host 0.0.0.0 --port 8000
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
  ui:
    build: 
      context: .
      args:
        SKIP_TESTS: "true"  # Skip tests in production build
    ports:
      - "8500:8500"
    volumes:
      - ./data:/app/data:ro  # Read-only pattern data
      - ./exports:/app/exports:ro  # Read-only exports
      - ./.env:/app/.env:ro  # Environment variables
    environment:
      - PYTHONPATH=/app
      - API_BASE_URL=http://api:8000
    command: streamlit run streamlit_app.py --server.port 8500 --server.address 0.0.0.0 --server.headless true
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  redis_data:
    driver: local

# Note: To run without Redis, use docker-compose up api ui (excludes redis service)