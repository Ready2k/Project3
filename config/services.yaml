# Service Configuration
# This file defines all services available in the system and their configuration

services:
  # Core Infrastructure Services
  logger:
    class_path: "app.utils.logger.AppLogger"
    singleton: true
    dependencies: ["config"]
    config:
      level: "INFO"
      format: "structured"
      redact_pii: true
      file_path: "logs/aaa.log"
      rotation: "1 day"
      retention: "30 days"
    health_check:
      enabled: true
      interval_seconds: 60

  config:
    class_path: "app.config.ConfigService"
    singleton: true
    dependencies: []
    config:
      config_file: "config.yaml"
      environment_prefix: "AAA"
      auto_reload: false
      validation_enabled: true
    health_check:
      enabled: true
      interval_seconds: 300

  cache:
    class_path: "app.services.cache_service.CacheService"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      backend: "memory"  # memory, redis, file
      default_ttl_seconds: 3600
      max_size_mb: 100
      cleanup_interval_seconds: 300
      redis_config:
        host: "localhost"
        port: 6379
        db: 0
        password: null
        ssl: false
    health_check:
      enabled: true
      interval_seconds: 30

  # Security Services
  security_validator:
    class_path: "app.security.validation.SecurityValidator"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      enable_input_validation: true
      enable_output_sanitization: true
      max_input_length: 10000
      blocked_patterns: []
      rate_limiting:
        enabled: true
        requests_per_minute: 60
        requests_per_hour: 1000
    health_check:
      enabled: true
      interval_seconds: 60

  advanced_prompt_defender:
    class_path: "app.security.advanced_prompt_defender.AdvancedPromptDefender"
    singleton: true
    dependencies: ["config", "logger", "cache"]
    config:
      enabled: true
      detection_confidence_threshold: 0.7
      flag_threshold: 0.5
      block_threshold: 0.9
      max_validation_time_ms: 100
      enable_caching: true
      cache_ttl_seconds: 300
      parallel_detection: true
      educational_messages: true
    health_check:
      enabled: true
      interval_seconds: 120

  # LLM Provider Services
  llm_provider_factory:
    class_path: "app.llm.factory.LLMProviderFactory"
    singleton: false  # Create new instances as needed
    dependencies: ["config", "logger"]
    config:
      default_provider: "openai"
      fallback_providers: ["anthropic", "bedrock"]
      timeout_seconds: 30
      max_retries: 3
      retry_delay_seconds: 1.0
    health_check:
      enabled: true
      interval_seconds: 300

  # Diagram Service Factory
  diagram_service_factory:
    class_path: "app.diagrams.factory.DiagramServiceFactory"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      mermaid_config:
        default_height: 400
        enable_enhanced_rendering: true
        theme: "default"
        max_nodes: 100
      infrastructure_config:
        default_format: "png"
        enable_dynamic_mapping: true
        dpi: 300
        font_size: 12
        max_components: 50
      drawio_config:
        enable_multiple_formats: true
        include_metadata: true
        export_path: "./exports"
    health_check:
      enabled: true
      interval_seconds: 300

  # Pattern Loader Service
  pattern_loader:
    class_path: "app.pattern.loader.PatternLoader"
    singleton: true
    dependencies: ["config"]
    config:
      pattern_library_path: "./data/patterns"
    health_check:
      enabled: true
      interval_seconds: 300

  openai_provider:
    class_path: "app.llm.openai_provider.OpenAIProvider"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      model: "gpt-4o"
      temperature: 0.3
      max_tokens: 1000
      timeout_seconds: 30
      api_key_env_var: "OPENAI_API_KEY"
    health_check:
      enabled: true
      interval_seconds: 300

  anthropic_provider:
    class_path: "app.llm.claude_provider.ClaudeProvider"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      model: "claude-3-sonnet-20240229"
      temperature: 0.3
      max_tokens: 1000
      timeout_seconds: 30
      api_key_env_var: "ANTHROPIC_API_KEY"
    health_check:
      enabled: true
      interval_seconds: 300

  bedrock_provider:
    class_path: "app.llm.bedrock_provider.BedrockProvider"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      region: "us-east-1"
      model: "anthropic.claude-3-sonnet-20240229-v1:0"
      temperature: 0.3
      max_tokens: 1000
      timeout_seconds: 30
    health_check:
      enabled: true
      interval_seconds: 300

  # Analysis and Processing Services
  pattern_matcher:
    class_path: "app.pattern.matcher.PatternMatcher"
    singleton: true
    dependencies: ["config", "logger", "cache"]
    config:
      pattern_library_path: "./data/patterns"
      similarity_threshold: 0.7
      cache_results: true
      cache_ttl_seconds: 1800
    health_check:
      enabled: true
      interval_seconds: 180

  agentic_matcher:
    class_path: "app.pattern.agentic_matcher.AgenticMatcher"
    singleton: true
    dependencies: ["config", "logger", "cache", "llm_provider_factory"]
    config:
      confidence_threshold: 0.6
      enhancement_enabled: true
      fallback_to_traditional: true
    health_check:
      enabled: true
      interval_seconds: 180

  embedding_engine:
    class_path: "app.embeddings.engine.EmbeddingEngine"
    singleton: true
    dependencies: ["config", "logger", "cache"]
    config:
      provider: "sentence_transformers"
      model_name: "all-MiniLM-L6-v2"
      dimension: 384
      cache_embeddings: true
      fallback_provider: "hash_based"
    health_check:
      enabled: true
      interval_seconds: 300

  # Export Services
  export_service:
    class_path: "app.exporters.service.ExportService"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      export_path: "./exports"
      supported_formats: ["json", "markdown", "drawio"]
      max_file_size_mb: 50
      cleanup_old_exports: true
      retention_days: 30
    health_check:
      enabled: true
      interval_seconds: 300

  # Diagram Services
  mermaid_service:
    class_path: "app.ui.mermaid_diagrams.MermaidService"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      theme: "default"
      max_nodes: 100
      layout_algorithm: "dagre"
    health_check:
      enabled: true
      interval_seconds: 300

  infrastructure_diagram_service:
    class_path: "app.diagrams.infrastructure.InfrastructureDiagramService"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      output_format: "png"
      dpi: 300
      font_size: 12
      max_components: 50
    health_check:
      enabled: true
      interval_seconds: 300

  # Monitoring and Health Services
  performance_monitor:
    class_path: "app.monitoring.performance_monitor.PerformanceMonitor"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      enabled: true
      sample_rate: 0.1
      metrics_retention_days: 7
      alert_thresholds:
        response_time_ms: 5000
        error_rate_percent: 5.0
        memory_usage_percent: 80.0
    health_check:
      enabled: true
      interval_seconds: 60

  health_checker:
    class_path: "app.health.health_checker.HealthChecker"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      check_interval_seconds: 30
      timeout_seconds: 10
      alert_on_failure: true
      max_consecutive_failures: 3
    health_check:
      enabled: true
      interval_seconds: 30

  # External Integration Services
  jira_service:
    class_path: "app.services.jira.JiraService"
    singleton: true
    dependencies: ["config", "logger"]
    config:
      timeout_seconds: 30
      max_retries: 3
      retry_delay_seconds: 1.0
      verify_ssl: true
      connection_pool_size: 10
    health_check:
      enabled: true
      interval_seconds: 300

# Environment-specific overrides
environments:
  development:
    logger:
      config:
        level: "DEBUG"
        format: "detailed"
    cache:
      config:
        backend: "memory"
        max_size_mb: 50
    performance_monitor:
      config:
        sample_rate: 1.0
    advanced_prompt_defender:
      config:
        enabled: false  # Disable in development for easier testing

  testing:
    logger:
      config:
        level: "WARNING"
        file_path: null  # No file logging in tests
    cache:
      config:
        backend: "memory"
        max_size_mb: 10
    llm_provider_factory:
      config:
        default_provider: "fake"  # Use fake provider in tests
    advanced_prompt_defender:
      config:
        enabled: false
    jira_service:
      config:
        timeout_seconds: 5  # Faster timeouts in tests

  production:
    logger:
      config:
        level: "INFO"
        format: "structured"
    cache:
      config:
        backend: "redis"
        max_size_mb: 500
    performance_monitor:
      config:
        sample_rate: 0.01  # Lower sampling in production
        alert_thresholds:
          response_time_ms: 2000
          error_rate_percent: 1.0
    advanced_prompt_defender:
      config:
        enabled: true
        parallel_detection: true
        cache_ttl_seconds: 600

  staging:
    logger:
      config:
        level: "INFO"
    cache:
      config:
        backend: "redis"
        max_size_mb: 200
    performance_monitor:
      config:
        sample_rate: 0.1